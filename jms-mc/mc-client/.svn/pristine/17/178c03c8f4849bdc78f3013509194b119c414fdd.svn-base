package com.mama100.monitorcenter.client;

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.MapMessage;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;

public class MonitorManager {
	Logger logger = Logger.getLogger(getClass().getName());
	
	private static MonitorManager monitor = new MonitorManager();
	private Connection conn;
	Queue myQueue;
	
	private MonitorManager(){
		 ConnectionFactory connFactory = new com.sun.messaging.ConnectionFactory();
		 try {
			connFactory.createConnection();
			
			conn = connFactory.createConnection();
			myQueue = new com.sun.messaging.Queue("mnit.queue");

			conn.start();
		} catch (JMSException e) {
			logger.log(Level.SEVERE, e.getMessage(), e);
		}
	}
	
	public synchronized static MonitorManager getInstance(){
		return monitor;
	}
	
	public void close(){
		if(conn != null){
			try {
				conn.close();
			} catch (JMSException e) {
//				e.printStackTrace();
			}
		}
	}
	
	/**
	 * 将
	 * @param appName 		应用名称
	 * @param target		
	 * @param monitorMap
	 * @throws JMSException
	 */
	public void addMonitor(String appName, String target, Map<String, String> monitorMap) throws JMSException{
		addMonitor(appName, target, null, monitorMap);
	}
	
	public void addMonitor(String appName, String target, String appAddr, Map<String, String> monitorMap) throws JMSException{
		
		Session session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);

		MessageProducer myMsgProducer = session.createProducer(myQueue);

		String ip = "--";
		try {
			InetAddress addr = InetAddress.getLocalHost();
			ip = addr.getHostAddress();// 获得本机IP
		} catch (UnknownHostException e) {
			// logger.log(Level.SEVERE, e.getMessage(), e);
		}

		MapMessage mm = session.createMapMessage();

		mm.setString("appName", appName);
		mm.setString("target", target);
		mm.setString("appAddr", appAddr == null ? ip : appAddr);
		
		if(null != monitorMap){
			for(Iterator<Entry<String, String>> it = monitorMap.entrySet().iterator(); it.hasNext(); ){
				Entry<String, String> entry = it.next();
				mm.setString(entry.getKey(), entry.getValue());
			}
		}

		myMsgProducer.send(mm);
//		logger.info("add to monitor " + appName);

		session.close();
	}
	
//	public static void main(String[] args) {
//		String appName = "test";
//		
//		Random random = new Random();
//		Map<String, String> mm = new HashMap<String, String>(3);
//		
//		int count = 100;
//		
//		try {
//			while(true){
//				if(count == 0)
//					break;
//				
//				mm.put("key1", "111" + random.nextInt(10));
//				mm.put("key2", "222" + random.nextInt(10));
//				mm.put("key3", "value3" + random.nextInt(10));
//				MonitorManager.getInstance().addMonitor(appName+ random.nextInt(20), mm);
//				
//				count--;
//				try {
//					Thread.sleep(random.nextInt(5000));
//				} catch (InterruptedException e) {
//					e.printStackTrace();
//				}
//				
//			}
//			
//		} catch (JMSException e) {
//			e.printStackTrace();
//		} finally {
//			MonitorManager.getInstance().close();
//			System.out.println("----------------");
//			System.exit(0);
//		}
//	}
}
